syntax = "proto3";
package oracle.v1.types;

option go_package = "github.com/bandprotocol/bandchain-packet/types";

import "gogoproto/gogo.proto";
import "oracle/v1/packet/packet.proto";

// Result encodes a result of request and store in chain
message Result {
  option (gogoproto.equal) = true;
  // ClientID is the unique identifier of this oracle request, as specified by
  // the client. This same unique ID will be sent back to the requester with the
  // oracle response.
  string client_id = 1 [ (gogoproto.customname) = "ClientID" ];
  // OracleScriptID is the unique identifier of the oracle script to be
  // executed.
  uint64 oracle_script_id = 2 [
    (gogoproto.customname) = "OracleScriptID",
    (gogoproto.casttype) = "OracleScriptID"
  ];
  // Calldata is the calldata bytes available for oracle executor to read.
  bytes calldata = 3;
  // AskCount is the number of validators that are requested to respond to this
  // oracle request. Higher value means more security, at a higher gas cost.
  uint64 ask_count = 4;
  // MinCount is the minimum number of validators necessary for the request to
  // proceed to the execution phase. Higher value means more security, at the
  // cost of liveness.
  uint64 min_count = 5;
  // RequestID is BandChain's unique identifier for this oracle request.
  uint64 request_id = 6 [
    (gogoproto.customname) = "RequestID",
    (gogoproto.casttype) = "RequestID"
  ];
  // AnsCount is the number of validators among to the asked validators that
  // actually responded to this oracle request prior to this oracle request
  // being resolved.
  uint64 ans_count = 7;
  // RequestTime is the UNIX epoch time at which the request was sent to
  // BandChain.
  int64 request_time = 8;
  // ResolveTime is the UNIX epoch time at which the request was resolved to the
  // final result.
  int64 resolve_time = 9;
  // ResolveStatus is the status of this oracle request, which can be OK,
  // FAILURE, or EXPIRED.
  packet.ResolveStatus resolve_status = 10;
  // Result is the final aggregated value only available if status if OK.
  bytes result = 11;
}
